def proc1(){
    var @x, y&, z : int;
    // retorno nao deveria possuir valor
    return 10;
}

// retorno fora de subprograma
//return 15;

def proc2(y[] : bool){
    // retorno sem ponto e virgula
    return
}

def func1(x,y: int; z : bool ) : bool{
    var _ : bool;
    var i : int;

    // skip e stop sem ';'
    // expressao do for com tipo nao logico
    for(i=0; i + 12; i+=1){
        if(i % 2 != 0){
            skip
        }

        if(i == 3){
            stop
        }
    }
    
    // operacao relacional incorreta entre int e bool
    if (x > z){
        // stop fora do laco de repeticao
        stop;
        // retorno de funcao deve conter expressao
        return ;
    } else {
        // skip fora do laco de repeticao
        skip;
        // retorno com tipo incorreto
        return 2;
    }

    return true;
}

def func2(k[] : int) : int{
    return k[1];
}

def main() : int{
    // inicializacao de tipo incorreto
    var i = true : int;
    var j : bool;
    // tipo errado
    var w[2] = {4, "ola"} : int;

    // parametro passado, quando nao deveria
    // procedimento sendo utilizado para atribuicao
    i = proc1(10);
    // parametros de forma errada
    proc2(w);
    proc2(w[0]);

    // leitura de variavel nao declarada
    read entrada;

    // atribuicao de tipo incorreto
    i = func1(10, 15, true);
    // atribuicao sem declaracao e com numero de parametros errados
    y = func1(10, 15);
    // atribuicao com tipos de parametros errados
    j = func1(true, false, "bob");

    // condicao de if nao eh do tipo bool
    if("condicao"){
        // acesso com tipo n√£o inteiro
        i = w["a"];
    }

    // sem ponto e virgula
    i = w[1]

    // condicao do while nao eh bool
    while(4){
        // parametro da um "int" e nao um "array(int)"
        i = func2(w[1]);        
    }

    // chamada de procedimentos e funcoes que nao existem
    i = naoExisto();
    // sem ponto e virgula
    i = naoExisto()
    naoExistoTambem();

    return true;
}

def notMain() : int{
    write "Esta nao eh a main!\n";

    return 0;
}